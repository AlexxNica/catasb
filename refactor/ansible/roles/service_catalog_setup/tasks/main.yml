---
  - name: Install docker-py through pip as it's a requirement of ansible dockcer module
    pip:
      name: docker-py

  - name: Docker pull {{ svc_cat_apiserver_img }}
    docker_image:
      name: "{{ svc_cat_apiserver_img }}"
    register: docker_pull_svc_cat_apiserver

  - name: Docker tag apiserver
    shell: docker tag {{ svc_cat_apiserver_img }} {{ svc_cat_apiserver_tag }}
    when: docker_pull_svc_cat_apiserver.changed

  - name: Docker pull {{ svc_cat_controller_mgr_img }}
    docker_image:
      name: "{{ svc_cat_controller_mgr_img }}"
      tag: "{{ svc_cat_controller_mgr_tag }}"
    register: docker_pull_svc_cat

  - name: Docker tag service catalog controller
    shell: docker tag {{ svc_cat_controller_mgr_img }} {{ svc_cat_controller_mgr_tag }}
    when: docker_pull_svc_cat.changed

  - name: Create a new project for the service-catalog
    shell: "{{ oc_cmd }} new-project service-catalog"
    when: docker_pull_svc_cat.changed
    register: new_svc_cat_project

  - name: Copy service-catalog.templ.yaml
    copy:
      src: service-catalog.templ.yaml
      dest: /tmp/service-catalog.templ.yaml
    register: copy_svc_catalog_tmp

  - name: Install Service Catalog through OC Template
    shell: "{{ oc_cmd }} process -f /tmp/service-catalog.templ.yaml | {{ oc_cmd }} create -f -"
    when: copy_svc_catalog_tmp.changed

# TODO: This is bad. HACK: Wait until apiserver is up
# Tap into cluster events somehow?
#until oc get pods | grep -qiEm1 "apiserver.*?running"; do : ; done
# Get apiserver ip address
#API_SRV_IP=$(/shared/get_apiserver_ip.sh)
#SERVICE_CAT_ENDPOINT="$API_SRV_IP:8081"
#echo "Service Catalog Endpoint: $SERVICE_CAT_ENDPOINT"
#mkdir /home/vagrant/.kube
#cat /shared/kubeconfig.templ.yaml | sed "s|{{SERVICE_CATALOG_ENDPOINT}}|$SERVICE_CAT_ENDPOINT|" \
#  > /home/vagrant/.kube/service-catalog.config
#chown -R vagrant:vagrant /home/vagrant/.kube
